import type { ProducerStatus } from 'client/services/database/producers/models';
import Feature from 'ol/Feature';
import type Geometry from 'ol/geom/Geometry';
import { Point } from 'ol/geom';
import { Icon, Style } from 'ol/style';
import { fromLonLat } from 'ol/proj';
import type { LatLon } from '../models';
import { MaxCurrentSpeed, MaxWaveSpeed } from '../constants';

const genArrow = ({
    heading,
    strengthPercent,
    color,
}: {
    heading: number;
    strengthPercent: number;
    color: string;
}) => {
    const length = 128 - 60 * (strengthPercent / 100);
    const arrow = `<g transform="rotate(${heading - 180})">
      <svg x="-16" y="-128" width="32" height="256" viewBox="0 0 32 256" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M11.446 51.929 16 41l9.108 21.858c.337.81-.458 1.63-1.278 1.32L17 61.59v62.536a4.002 4.002 0 0 1-.5 7.843V216h-1v-84.031a4 4 0 0 1-.5-7.843V61.589l-6.83 2.589c-.82.31-1.615-.51-1.277-1.32l4.553-10.929Z" fill="${color}"/>
      <line x1="16" y1="128" x2="16" y2="${length}" stroke="${color}" stroke-width="6"  />
      </svg>
      </g>`;
    return arrow;
};

export const azimuth = (data: ProducerStatus) => {
    const { wave, current10m, current20m, current50m } = data;

    const waveArrow = genArrow({
        heading: wave.direction,
        strengthPercent: Math.min(
            Math.max((wave.speed * 100) / MaxWaveSpeed, 0),
            100,
        ),
        color: '#4c9a2a',
    });
    const current10mArrow = genArrow({
        heading: current10m.direction,
        strengthPercent: Math.min(
            Math.max((current10m.speed * 100) / MaxCurrentSpeed, 0),
            100,
        ),
        color: '#1e90ff',
    });
    const current20mArrow = genArrow({
        heading: current20m.direction,
        strengthPercent: Math.min(
            Math.max((current20m.speed * 100) / MaxCurrentSpeed, 0),
            100,
        ),
        color: '#00f',
    });
    const current50mArrow = genArrow({
        heading: current50m.direction,
        strengthPercent: Math.min(
            Math.max((current50m.speed * 100) / MaxCurrentSpeed, 0),
            100,
        ),
        color: '#151b54',
    });

    // const currentArrowColor = currentArrowData?.color ?? '#0080FF';
    // const currentMarkerSvg =
    //   current === undefined
    //     ? undefined
    //     : `<g transform="rotate(${current.heading})"><svg x="-12" y="-128" width="32" height="256" ><svg width="24" height="256" viewBox="0 0 24 256" fill="none" xmlns="http://www.w3.org/2000/svg" ><g  clip-path="url(#d)"><path fill-rule="evenodd" clip-rule="evenodd" d="M6.723 18.909 7.79 17.84l4.01 4.01 4.006-4.006 1.068 1.068-4.006 4.006.009.008-1.069 1.069-.008-.009-.013.013-1.068-1.068.013-.013-4.01-4.01Zm10.152-6.038-1.068-1.069-4.006 4.006-4.01-4.01-1.068 1.068 4.01 4.01-.013.013 1.068 1.068.013-.013.008.009 1.069-1.068-.009-.009 4.006-4.006ZM12.559 0v11.797h-1.511V0h1.51Z" fill="${currentArrowColor}" class="ob-instrument-dynamic-color-fill"/></g><defs><clipPath id="d"><path fill="#fff" transform="rotate(-90 12 12)" d="M0 0h24v24H0z"/></clipPath></defs></svg></svg></g>`;

    const textWave = `<text x="-65" y="130" font-size="10px">Wave: ${wave.height.toFixed(
        1,
    )}m @ ${wave.direction.toFixed(1)}째, ${wave.speed.toFixed(2)}m/s</text>`;
    const textCurrent10m = `<text x="-65" y="145" font-size="10px">Current 10m: ${current10m.speed.toFixed(2)}m/s @ ${current10m.direction.toFixed(1)}째</text>`;
    const textCurrent20m = `<text x="-65" y="160" font-size="10px">Current 20m: ${current20m.speed.toFixed(2)}m/s @ ${current20m.direction.toFixed(1)}째</text>`;
    const textCurrent50m = `<text x="-65" y="175" font-size="10px">Current 50m: ${current50m.speed.toFixed(2)}m/s @ ${current50m.direction.toFixed(1)}째</text>`;

    return `<svg xmlns="http://www.w3.org/2000/svg" width="256" height="350" viewBox="-128 -150 256 300">
  <svg x="-128" y="-150"><svg viewBox="-128 -128 256 256"><g mask="url(#a)"><svg width="256" height="256" x="-128" y="-128"><svg width="256" height="256" viewBox="0 0 256 256" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M232 128c0 57.438-46.562 104-104 104S24 185.438 24 128 70.562 24 128 24s104 46.562 104 104Zm-104 88c48.601 0 88-39.399 88-88s-39.399-88-88-88-88 39.399-88 88 39.399 88 88 88Z" fill="#FFF"/><circle cx="128" cy="128" r="88.5" stroke="#CCC"/><circle cx="128" cy="128" r="104.5" stroke="#CCC"/></svg></svg><svg width="176" height="176" x="-88" y="-88"/><svg width="208" height="208" x="-104" y="-104" viewBox="0 0 416 416"><svg width="416" height="416" viewBox="0 0 416 416" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M208 16v16m-16.734-15.27 1.395 15.94M174.66 18.917l2.778 15.757m-19.131-12.132 4.141 15.455M142.332 27.58l5.472 15.035m-20.947-8.625 6.762 14.5M112 41.724l8 13.857m-22.127-4.857 9.178 13.106m-22.466-2.91 10.284 12.257m-22.633-.94L83.549 83.55m-22.63 1.036L73.176 94.87m-22.453 3.004 13.106 9.178M41.723 112l13.857 8m-21.591 6.857 14.5 6.762m-20.91 8.713 15.035 5.472m-20.072 10.503 15.455 4.141m-19.08 12.212 15.757 2.778M16.73 191.266l15.939 1.395M16 208h16m-15.27 16.734 15.94-1.395M18.917 241.34l15.757-2.778m-12.132 19.131 15.455-4.141M27.58 273.668l15.035-5.472m-8.625 20.947 14.5-6.762M41.724 304l13.857-8m-4.857 22.127 13.106-9.178m-2.91 22.466 12.257-10.284m-.94 22.633 11.313-11.313m1.036 22.63 10.284-12.257m3.004 22.453 9.178-13.106M112 374.277l8-13.857m6.857 21.591 6.762-14.501m8.713 20.911 5.472-15.035m10.503 20.072 4.141-15.455m12.212 19.08 2.778-15.757m13.828 17.943 1.395-15.939M208 400v-16m16.734 15.269-1.395-15.939m18.001 13.753-2.778-15.757m19.131 12.132-4.141-15.455m20.116 10.418-5.472-15.035m20.947 8.625-6.762-14.501M304 374.277l-8-13.857m22.127 4.857-9.178-13.106m22.466 2.91-10.284-12.257m22.634.94-11.314-11.313m22.63-1.036-12.257-10.284m22.453-3.004-13.106-9.178M374.277 304l-13.857-8m21.591-6.857-14.501-6.762m20.911-8.713-15.035-5.472m20.072-10.503-15.455-4.141m19.08-12.212-15.757-2.778m17.943-13.828-15.939-1.395M400 208h-16m15.269-16.734-15.939 1.395m13.753-18.001-15.757 2.778m12.132-19.131-15.455 4.141m10.418-20.116-15.035 5.472m8.625-20.947-14.501 6.762M374.277 112l-13.857 8m4.857-22.127-13.106 9.178m2.91-22.466-12.257 10.284m.941-22.633-11.314 11.313m-1.036-22.63-10.284 12.257m-3.004-22.453-9.178 13.106M304 41.723l-8 13.857m-6.857-21.591-6.762 14.5m-8.713-20.91-5.472 15.035m-10.503-20.072-4.141 15.455m-12.212-19.08-2.778 15.757M224.734 16.73l-1.395 15.939" stroke-linejoin="round" stroke="#666"/></svg></svg><svg width="363" height="363" x="-181.5" y="-181.5"><svg width="363" height="363" viewBox="0 0 363 363" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#b)" stroke="#000"><path d="m107.766 107.766 11.343 11.343m124.782 124.782 11.343 11.343m-147.468 0 11.343-11.343m124.782-124.782 11.343-11.343"/></g><path d="M181.5 77.224v16.042m0 176.468v16.042M77.224 181.5h16.042m176.468 0h16.042" stroke="#000"/><path d="M95.341 97.703c0 .548-.154.997-.464 1.345-.305.349-.74.582-1.304.7v.046c.69.087 1.2.306 1.533.658.333.353.5.815.5 1.387 0 .818-.284 1.449-.852 1.892-.568.438-1.375.658-2.42.658a6.92 6.92 0 0 1-1.252-.106 4.188 4.188 0 0 1-1.099-.359v-.928a5.485 5.485 0 0 0 2.385.564c1.485 0 2.227-.581 2.227-1.745 0-1.041-.819-1.562-2.456-1.562h-.846v-.84h.858c.67 0 1.2-.147 1.592-.441.392-.298.588-.709.588-1.234 0-.419-.145-.748-.435-.987-.286-.239-.676-.358-1.17-.358-.375 0-.73.05-1.063.153-.332.101-.712.29-1.14.564l-.493-.658a4.07 4.07 0 0 1 1.216-.653c.463-.16.948-.24 1.457-.24.835 0 1.483.192 1.945.575.462.38.693.903.693 1.569Zm5.176 6.568h-.952v-6.122c0-.509.016-.99.047-1.445a6.248 6.248 0 0 1-.276.259c-.102.09-.568.472-1.398 1.145l-.517-.67 2.273-1.756h.823v8.589Zm5.957-5.246c.905 0 1.616.225 2.133.675.521.447.781 1.06.781 1.839 0 .889-.284 1.586-.852 2.092-.564.505-1.343.758-2.338.758-.967 0-1.706-.155-2.215-.465v-.94c.274.177.615.316 1.022.418a5.14 5.14 0 0 0 1.205.146c.689 0 1.224-.162 1.604-.487.383-.325.575-.795.575-1.41 0-1.199-.734-1.798-2.203-1.798-.372 0-.869.057-1.492.171l-.505-.324.323-4.018h4.271v.899h-3.437l-.217 2.579c.45-.09.899-.135 1.345-.135Zm151.642 169.73h-.952v-6.121c0-.509.016-.991.047-1.445a6.081 6.081 0 0 1-.276.258c-.102.09-.568.472-1.398 1.146l-.517-.67 2.274-1.757h.822v8.589Zm8.595-6.568c0 .549-.155.997-.464 1.346-.306.348-.74.581-1.304.699v.047c.689.086 1.2.305 1.533.658.333.352.499.814.499 1.386 0 .819-.284 1.449-.851 1.892-.568.439-1.375.658-2.421.658-.454 0-.871-.035-1.251-.106a4.194 4.194 0 0 1-1.099-.358v-.928a5.486 5.486 0 0 0 2.385.564c1.485 0 2.227-.582 2.227-1.745 0-1.042-.819-1.563-2.456-1.563h-.846v-.84h.858c.67 0 1.2-.147 1.592-.441.392-.297.588-.709.588-1.233 0-.42-.145-.749-.435-.987-.286-.239-.676-.359-1.169-.359-.376 0-.731.051-1.064.153-.333.102-.713.29-1.139.564l-.494-.658a4.066 4.066 0 0 1 1.216-.652 4.397 4.397 0 0 1 1.457-.241c.834 0 1.483.192 1.945.576.462.38.693.902.693 1.568Zm4.248 1.322c.904 0 1.615.225 2.132.676.521.446.782 1.059.782 1.839 0 .889-.284 1.586-.852 2.091-.564.505-1.344.758-2.339.758-.967 0-1.705-.155-2.214-.464v-.94c.274.176.615.315 1.022.417.407.098.809.147 1.204.147.69 0 1.224-.163 1.604-.488.384-.325.576-.795.576-1.41 0-1.198-.735-1.797-2.203-1.797-.372 0-.87.056-1.492.17l-.506-.323.323-4.019h4.271v.899h-3.436l-.218 2.579c.451-.09.899-.135 1.346-.135ZM260.196 99.965c0 1.484-.235 2.593-.705 3.325-.466.732-1.181 1.099-2.145 1.099-.924 0-1.627-.374-2.109-1.123-.481-.751-.722-1.852-.722-3.301 0-1.496.233-2.607.699-3.331.466-.725 1.177-1.087 2.132-1.087.933 0 1.639.378 2.121 1.134.486.756.729 1.85.729 3.284Zm-4.694 0c0 1.249.147 2.16.44 2.732.294.568.762.851 1.404.851.651 0 1.121-.287 1.41-.863.294-.58.441-1.486.441-2.72 0-1.234-.147-2.137-.441-2.709-.289-.575-.759-.863-1.41-.863-.642 0-1.11.284-1.404.852-.293.564-.44 1.47-.44 2.72Zm11.938 2.332h-1.275v1.974h-.934v-1.974h-4.178v-.852l4.078-5.81h1.034v5.775h1.275v.887Zm-2.209-.887v-2.855c0-.56.019-1.193.058-1.898h-.047a8.921 8.921 0 0 1-.528.934l-2.685 3.819h3.202Zm5.728-2.385c.904 0 1.615.225 2.132.675.521.447.782 1.06.782 1.839 0 .889-.284 1.586-.852 2.092-.564.505-1.344.758-2.339.758-.967 0-1.705-.155-2.214-.465v-.94c.274.177.615.316 1.022.418.407.098.809.146 1.204.146.69 0 1.224-.162 1.604-.487.384-.325.576-.795.576-1.41 0-1.199-.735-1.798-2.203-1.798-.372 0-.87.057-1.492.171l-.506-.324.323-4.018h4.271v.899h-3.436l-.218 2.579c.451-.09.899-.135 1.346-.135ZM95.664 268.755H90.02v-.84l2.261-2.273c.69-.697 1.144-1.195 1.363-1.492.22-.298.384-.588.494-.87.11-.282.164-.585.164-.911 0-.458-.139-.82-.417-1.086-.278-.271-.664-.406-1.157-.406a2.95 2.95 0 0 0-1.017.176c-.317.118-.671.331-1.063.641l-.517-.664c.791-.658 1.653-.987 2.585-.987.807 0 1.44.208 1.898.623.458.411.687.965.687 1.662 0 .545-.153 1.083-.458 1.616-.306.533-.877 1.206-1.716 2.021l-1.88 1.839v.047h4.418v.904Zm6.886 0h-5.646v-.84l2.262-2.273c.69-.697 1.143-1.195 1.363-1.492.219-.298.384-.588.493-.87.11-.282.165-.585.165-.911 0-.458-.139-.82-.417-1.086-.278-.271-.664-.406-1.158-.406-.356 0-.695.059-1.016.176-.317.118-.672.331-1.064.641l-.516-.664c.79-.658 1.652-.987 2.584-.987.807 0 1.44.208 1.898.623.458.411.687.965.687 1.662 0 .545-.152 1.083-.458 1.616-.305.533-.877 1.206-1.715 2.021l-1.88 1.839v.047h4.418v.904Zm3.924-5.246c.905 0 1.616.225 2.133.676.521.446.781 1.059.781 1.839 0 .889-.284 1.586-.852 2.091-.564.505-1.343.758-2.338.758-.967 0-1.706-.155-2.215-.464v-.94c.274.176.615.315 1.022.417.408.098.809.147 1.205.147.689 0 1.224-.163 1.604-.488.383-.325.575-.795.575-1.41 0-1.198-.734-1.797-2.203-1.797-.372 0-.869.056-1.492.17l-.505-.323.323-4.019h4.271v.899h-3.437l-.217 2.579c.45-.09.899-.135 1.345-.135Zm78.833-193.304h-2.315l-3.736-6.497h-.053c.074 1.147.112 1.966.112 2.455v4.042h-1.628v-8.589h2.297l3.731 6.433h.041a51.663 51.663 0 0 1-.088-2.367v-4.066h1.639v8.59Zm-.468 230.231c0 .776-.28 1.387-.84 1.833-.556.447-1.332.67-2.327.67-.916 0-1.727-.173-2.432-.517v-1.692c.58.258 1.069.44 1.469.546.403.106.771.159 1.104.159.4 0 .705-.077.917-.229.215-.153.323-.38.323-.682a.738.738 0 0 0-.141-.446 1.535 1.535 0 0 0-.417-.382c-.18-.122-.55-.315-1.111-.582-.524-.247-.918-.483-1.18-.711a2.658 2.658 0 0 1-.629-.793 2.257 2.257 0 0 1-.235-1.057c0-.76.257-1.357.77-1.792.517-.435 1.229-.652 2.138-.652.447 0 .872.053 1.275.158a8.79 8.79 0 0 1 1.275.447l-.588 1.416a8.624 8.624 0 0 0-1.139-.394 3.65 3.65 0 0 0-.882-.111c-.344 0-.609.08-.793.24a.797.797 0 0 0-.276.629c0 .161.037.302.112.423.074.118.192.233.352.347.165.109.551.309 1.158.599.802.384 1.353.769 1.65 1.157.298.384.447.856.447 1.416Zm116.126-113.923h-4.947v-8.589h4.947v1.492h-3.126v1.886h2.908v1.492h-2.908v2.215h3.126v1.504Zm-232.142 0h-2.074l-1.163-4.512a23.39 23.39 0 0 1-.224-.993 11.92 11.92 0 0 1-.176-1.016c-.023.212-.082.552-.176 1.022-.094.466-.167.799-.218.999l-1.157 4.5h-2.068l-2.191-8.589h1.792l1.098 4.688c.192.866.331 1.616.417 2.25.024-.223.077-.567.159-1.034.086-.47.166-.834.24-1.092l1.252-4.812h1.722l1.251 4.812a25.743 25.743 0 0 1 .394 2.126c.039-.305.101-.685.188-1.139.086-.459.164-.829.235-1.111l1.092-4.688h1.792l-2.185 8.589ZM181.291 83.24h.418l3.969 10.026h-8.356l1.985-5.013 1.984-5.013Z" fill="#000"/><defs><clipPath id="b"><path fill="#fff" transform="rotate(-45 236.106 49.67) scale(1.00266)" d="M0 0h208v208H0z"/></clipPath></defs></svg></svg></g><path d="M0-104.276v16.042m0-16.042v16.042" stroke="#000"/><mask id="a"><path fill="#fff" d="M-128-128h256v256h-256z"/><path d="M0 0v-128Z"/></mask></svg></svg>
  ${waveArrow}
  ${current10mArrow}
  ${current20mArrow}
  ${current50mArrow}

  ${textWave}
  ${textCurrent10m}
  ${textCurrent20m}
  ${textCurrent50m}
</svg>`;
};

export const drawAzimuth = (location: LatLon, data: ProducerStatus) => {
    const fromCoord = fromLonLat([location.lon, location.lat]);
    const features: Feature<Geometry>[] = [];
    const svg = azimuth(data);
    const style = new Style({
        image: new Icon({
            opacity: 1,
            src: 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg),
            scale: 1.2,
        }),
    });
    const center = new Feature({
        geometry: new Point(fromCoord),
    });
    center.setStyle(style);
    features.push(center);

    return features;
};
