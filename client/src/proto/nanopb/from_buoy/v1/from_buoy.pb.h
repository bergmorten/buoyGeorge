/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_FROM_BUOY_V1_FROM_BUOY_V1_FROM_BUOY_PB_H_INCLUDED
#define PB_FROM_BUOY_V1_FROM_BUOY_V1_FROM_BUOY_PB_H_INCLUDED
#include <pb.h>
#include "from_buoy/ad2cp/v1/ad2cp.pb.h"
#include "from_buoy/ahrs/v1/ahrs.pb.h"
#include "from_buoy/gnss/v1/gnss.pb.h"
#include "from_buoy/log/v1/log.pb.h"
#include "from_buoy/manifest/v1/manifest.pb.h"
#include "from_buoy/self_test/v1/self_test.pb.h"
#include "from_buoy/system/v1/system.pb.h"
#include "from_buoy/wave/v1/wave.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Used if cloud should merge messages */
typedef struct _from_buoy_v1_MultiMessage {
    /* Message ID, increasing counter, used to identify the message */
    uint32_t message_id;
    /* Total number of messages in this message */
    uint32_t total_messages;
    /* Sequence number of this message */
    uint32_t sequence_number;
} from_buoy_v1_MultiMessage;

/* Records from onboard sensors */
typedef struct _from_buoy_v1_SensorRecord {
    /* AD2CP profiles */
    pb_callback_t profiles;
    /* Ahrs recordings */
    pb_callback_t ahrs;
    /* Wave profiles */
    pb_callback_t waves;
    /* GNSS locations */
    pb_callback_t locations;
} from_buoy_v1_SensorRecord;

/* Main message for data from the buoy */
typedef struct _from_buoy_v1_FromBuoy {
    /* For use in future updates */
    bool has_version;
    uint32_t version;
    /* Message sent UTC Seconds since 2025-01-01T00:00:00Z */
    bool has_seconds_2025;
    uint32_t seconds_2025;
    /* Multi-message information, used for e.g. SBD */
    bool has_multi_message;
    from_buoy_v1_MultiMessage multi_message;
    /* System performance */
    pb_callback_t system;
    /* Log messages */
    pb_callback_t logs;
    /* Self test report */
    bool has_self_test;
    from_buoy_self_test_v1_SelfTest self_test;
    /* Manifest / System information */
    bool has_manifest;
    from_buoy_manifest_v1_Manifest manifest;
    /* Sensor record */
    bool has_sensor_record;
    from_buoy_v1_SensorRecord sensor_record;
} from_buoy_v1_FromBuoy;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define from_buoy_v1_MultiMessage_init_default   {0, 0, 0}
#define from_buoy_v1_SensorRecord_init_default   {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define from_buoy_v1_FromBuoy_init_default       {false, 0, false, 0, false, from_buoy_v1_MultiMessage_init_default, {{NULL}, NULL}, {{NULL}, NULL}, false, from_buoy_self_test_v1_SelfTest_init_default, false, from_buoy_manifest_v1_Manifest_init_default, false, from_buoy_v1_SensorRecord_init_default}
#define from_buoy_v1_MultiMessage_init_zero      {0, 0, 0}
#define from_buoy_v1_SensorRecord_init_zero      {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define from_buoy_v1_FromBuoy_init_zero          {false, 0, false, 0, false, from_buoy_v1_MultiMessage_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, false, from_buoy_self_test_v1_SelfTest_init_zero, false, from_buoy_manifest_v1_Manifest_init_zero, false, from_buoy_v1_SensorRecord_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define from_buoy_v1_MultiMessage_message_id_tag 1
#define from_buoy_v1_MultiMessage_total_messages_tag 2
#define from_buoy_v1_MultiMessage_sequence_number_tag 3
#define from_buoy_v1_SensorRecord_profiles_tag   1
#define from_buoy_v1_SensorRecord_ahrs_tag       2
#define from_buoy_v1_SensorRecord_waves_tag      3
#define from_buoy_v1_SensorRecord_locations_tag  4
#define from_buoy_v1_FromBuoy_version_tag        1
#define from_buoy_v1_FromBuoy_seconds_2025_tag   2
#define from_buoy_v1_FromBuoy_multi_message_tag  3
#define from_buoy_v1_FromBuoy_system_tag         4
#define from_buoy_v1_FromBuoy_logs_tag           5
#define from_buoy_v1_FromBuoy_self_test_tag      6
#define from_buoy_v1_FromBuoy_manifest_tag       7
#define from_buoy_v1_FromBuoy_sensor_record_tag  8

/* Struct field encoding specification for nanopb */
#define from_buoy_v1_MultiMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   message_id,        1) \
X(a, STATIC,   SINGULAR, UINT32,   total_messages,    2) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_number,   3)
#define from_buoy_v1_MultiMessage_CALLBACK NULL
#define from_buoy_v1_MultiMessage_DEFAULT NULL

#define from_buoy_v1_SensorRecord_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  profiles,          1) \
X(a, CALLBACK, REPEATED, MESSAGE,  ahrs,              2) \
X(a, CALLBACK, REPEATED, MESSAGE,  waves,             3) \
X(a, CALLBACK, REPEATED, MESSAGE,  locations,         4)
#define from_buoy_v1_SensorRecord_CALLBACK pb_default_field_callback
#define from_buoy_v1_SensorRecord_DEFAULT NULL
#define from_buoy_v1_SensorRecord_profiles_MSGTYPE from_buoy_ad2cp_v1_Profile
#define from_buoy_v1_SensorRecord_ahrs_MSGTYPE from_buoy_ahrs_v1_Recording
#define from_buoy_v1_SensorRecord_waves_MSGTYPE from_buoy_wave_v1_Profile
#define from_buoy_v1_SensorRecord_locations_MSGTYPE from_buoy_gnss_v1_Location

#define from_buoy_v1_FromBuoy_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   version,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   seconds_2025,      2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  multi_message,     3) \
X(a, CALLBACK, REPEATED, MESSAGE,  system,            4) \
X(a, CALLBACK, REPEATED, MESSAGE,  logs,              5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  self_test,         6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  manifest,          7) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensor_record,     8)
#define from_buoy_v1_FromBuoy_CALLBACK pb_default_field_callback
#define from_buoy_v1_FromBuoy_DEFAULT NULL
#define from_buoy_v1_FromBuoy_multi_message_MSGTYPE from_buoy_v1_MultiMessage
#define from_buoy_v1_FromBuoy_system_MSGTYPE from_buoy_system_v1_Performance
#define from_buoy_v1_FromBuoy_logs_MSGTYPE from_buoy_log_v1_Entry
#define from_buoy_v1_FromBuoy_self_test_MSGTYPE from_buoy_self_test_v1_SelfTest
#define from_buoy_v1_FromBuoy_manifest_MSGTYPE from_buoy_manifest_v1_Manifest
#define from_buoy_v1_FromBuoy_sensor_record_MSGTYPE from_buoy_v1_SensorRecord

extern const pb_msgdesc_t from_buoy_v1_MultiMessage_msg;
extern const pb_msgdesc_t from_buoy_v1_SensorRecord_msg;
extern const pb_msgdesc_t from_buoy_v1_FromBuoy_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define from_buoy_v1_MultiMessage_fields &from_buoy_v1_MultiMessage_msg
#define from_buoy_v1_SensorRecord_fields &from_buoy_v1_SensorRecord_msg
#define from_buoy_v1_FromBuoy_fields &from_buoy_v1_FromBuoy_msg

/* Maximum encoded size of messages (where known) */
/* from_buoy_v1_SensorRecord_size depends on runtime parameters */
/* from_buoy_v1_FromBuoy_size depends on runtime parameters */
#define FROM_BUOY_V1_FROM_BUOY_V1_FROM_BUOY_PB_H_MAX_SIZE from_buoy_v1_MultiMessage_size
#define from_buoy_v1_MultiMessage_size           18

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
