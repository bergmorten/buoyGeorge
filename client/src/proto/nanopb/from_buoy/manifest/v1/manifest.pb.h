/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_FROM_BUOY_MANIFEST_V1_FROM_BUOY_MANIFEST_V1_MANIFEST_PB_H_INCLUDED
#define PB_FROM_BUOY_MANIFEST_V1_FROM_BUOY_MANIFEST_V1_MANIFEST_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* The main board is installed */
typedef enum _from_buoy_manifest_v1_CPU {
    /* Unknown CPU type */
    from_buoy_manifest_v1_CPU_CPU_UNSPECIFIED = 0
} from_buoy_manifest_v1_CPU;

/* Which communications board is installed? */
typedef enum _from_buoy_manifest_v1_Comms {
    /* UNKNOWN COMMUNICATIONS TYPE */
    from_buoy_manifest_v1_Comms_COMMS_UNSPECIFIED = 0,
    /* ROCKBLOCK 9704 COMMUNICATIONS TYPE */
    from_buoy_manifest_v1_Comms_COMMS_ROCKBLOCK_9704 = 1,
    /* ROCKBLOCK 9703 COMMUNICATIONS TYPE */
    from_buoy_manifest_v1_Comms_COMMS_ROCKBLOCK_9703 = 2,
    /* QUALCOMM 315 COMMUNICATIONS TYPE */
    from_buoy_manifest_v1_Comms_COMMS_QUALCOMM_315 = 3,
    /* NRF9160 COMMUNICATIONS TYPE */
    from_buoy_manifest_v1_Comms_COMMS_NRF9160 = 4
} from_buoy_manifest_v1_Comms;

/* The GNSS board is installed */
typedef enum _from_buoy_manifest_v1_GNSS {
    /* UNKNOWN GNSS TYPE */
    from_buoy_manifest_v1_GNSS_GNSS_UNSPECIFIED = 0,
    /* UBLOX NEO-F9P GNSS TYPE */
    from_buoy_manifest_v1_GNSS_GNSS_UBLOX_NEO_F9P = 1,
    /* UBLOX ZED-F9P GNSS TYPE */
    from_buoy_manifest_v1_GNSS_GNSS_UBLOX_ZED_F9P = 2,
    /* UBLOX ZED-X209P GNSS TYPE */
    from_buoy_manifest_v1_GNSS_GNSS_UBLOX_ZED_X209P = 3
} from_buoy_manifest_v1_GNSS;

/* Struct definitions */
/* Identity and manifest of the system. Transferred on boot or command */
typedef struct _from_buoy_manifest_v1_Manifest {
    /* Serial number of the system */
    pb_callback_t serial_number;
    /* Firmware version string */
    pb_callback_t firmware_version;
    /* CPU model / Board */
    bool has_cpu;
    from_buoy_manifest_v1_CPU cpu;
    /* GNSS model / Board */
    bool has_gnss;
    from_buoy_manifest_v1_GNSS gnss;
    /* Communications model / Board */
    pb_callback_t comms;
    /* The manifest (JSON encoded) */
    pb_callback_t manifest;
} from_buoy_manifest_v1_Manifest;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _from_buoy_manifest_v1_CPU_MIN from_buoy_manifest_v1_CPU_CPU_UNSPECIFIED
#define _from_buoy_manifest_v1_CPU_MAX from_buoy_manifest_v1_CPU_CPU_UNSPECIFIED
#define _from_buoy_manifest_v1_CPU_ARRAYSIZE ((from_buoy_manifest_v1_CPU)(from_buoy_manifest_v1_CPU_CPU_UNSPECIFIED+1))

#define _from_buoy_manifest_v1_Comms_MIN from_buoy_manifest_v1_Comms_COMMS_UNSPECIFIED
#define _from_buoy_manifest_v1_Comms_MAX from_buoy_manifest_v1_Comms_COMMS_NRF9160
#define _from_buoy_manifest_v1_Comms_ARRAYSIZE ((from_buoy_manifest_v1_Comms)(from_buoy_manifest_v1_Comms_COMMS_NRF9160+1))

#define _from_buoy_manifest_v1_GNSS_MIN from_buoy_manifest_v1_GNSS_GNSS_UNSPECIFIED
#define _from_buoy_manifest_v1_GNSS_MAX from_buoy_manifest_v1_GNSS_GNSS_UBLOX_ZED_X209P
#define _from_buoy_manifest_v1_GNSS_ARRAYSIZE ((from_buoy_manifest_v1_GNSS)(from_buoy_manifest_v1_GNSS_GNSS_UBLOX_ZED_X209P+1))

#define from_buoy_manifest_v1_Manifest_cpu_ENUMTYPE from_buoy_manifest_v1_CPU
#define from_buoy_manifest_v1_Manifest_gnss_ENUMTYPE from_buoy_manifest_v1_GNSS
#define from_buoy_manifest_v1_Manifest_comms_ENUMTYPE from_buoy_manifest_v1_Comms


/* Initializer values for message structs */
#define from_buoy_manifest_v1_Manifest_init_default {{{NULL}, NULL}, {{NULL}, NULL}, false, _from_buoy_manifest_v1_CPU_MIN, false, _from_buoy_manifest_v1_GNSS_MIN, {{NULL}, NULL}, {{NULL}, NULL}}
#define from_buoy_manifest_v1_Manifest_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, false, _from_buoy_manifest_v1_CPU_MIN, false, _from_buoy_manifest_v1_GNSS_MIN, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define from_buoy_manifest_v1_Manifest_serial_number_tag 1
#define from_buoy_manifest_v1_Manifest_firmware_version_tag 2
#define from_buoy_manifest_v1_Manifest_cpu_tag   3
#define from_buoy_manifest_v1_Manifest_gnss_tag  4
#define from_buoy_manifest_v1_Manifest_comms_tag 5
#define from_buoy_manifest_v1_Manifest_manifest_tag 6

/* Struct field encoding specification for nanopb */
#define from_buoy_manifest_v1_Manifest_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   serial_number,     1) \
X(a, CALLBACK, OPTIONAL, STRING,   firmware_version,   2) \
X(a, STATIC,   OPTIONAL, UENUM,    cpu,               3) \
X(a, STATIC,   OPTIONAL, UENUM,    gnss,              4) \
X(a, CALLBACK, REPEATED, UENUM,    comms,             5) \
X(a, CALLBACK, OPTIONAL, STRING,   manifest,          6)
#define from_buoy_manifest_v1_Manifest_CALLBACK pb_default_field_callback
#define from_buoy_manifest_v1_Manifest_DEFAULT NULL

extern const pb_msgdesc_t from_buoy_manifest_v1_Manifest_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define from_buoy_manifest_v1_Manifest_fields &from_buoy_manifest_v1_Manifest_msg

/* Maximum encoded size of messages (where known) */
/* from_buoy_manifest_v1_Manifest_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
